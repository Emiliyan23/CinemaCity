@model BookingFormModel
@inject ISeatService _seatService

<div class="container">
	<div class="row">
		<h1>Select tickets for @Model.MovieTitle</h1>
		<div class="col-md-auto">
			<img src="@Model.ImagePath" alt="@Model.MovieTitle" />
		</div>
		<div class="col">
			<form method="post" onsubmit="return validateForm();">
				<div class="form-group">
					<table class="table table-dark table-striped">
						<thead>
						<tr>
							<th scope="col">Type</th>
							<th scope="col">Price</th>
							<th scope="col">Quantity</th>
						</tr>
						</thead>
						<tbody>
						@for (int i = 0; i < Model.TicketTypes.Count; i++)
						{
							<tr>
								<th scope="row">@Model.TicketTypes[i].Type</th>
								<td>@Model.TicketTypes[i].Price.ToString("F") лв.</td>
								<td>
									<input type="hidden" asp-for="SelectedTickets.SelectedTickets[i].TicketId" value="@Model.TicketTypes[i].Id"/>
									<select asp-for="SelectedTickets.SelectedTickets[i].Quantity" data-price="@Model.TicketTypes[i].Price" onchange="calculateTotalPrice()">
										@for (int j = 0; j <= 10; j++)
										{
											<option value="@j">@j</option>
										}
									</select>
								</td>
							</tr>
						}
						</tbody>
					</table>
				</div>
				<input type="hidden" asp-for="MovieTitle"/>
				<input type="hidden" asp-for="ShowtimeId"/>
				<input type="hidden" asp-for="ImagePath"/>
				<div class="row">
					<div class="col-md-auto">
						<div class="form-group">
							<h2>Select seats</h2>
							@for (int row = 1; row <= 5; row++)
							{
								<span class="text-light">@row</span>
								for (int col = 1; col <= 10; col++)
								{
									var seat = Model.TakenSeats.FirstOrDefault(s => s.RowNum == row && s.ColNum == col);
									if (seat == null)
									{
										int seatId = await _seatService.GetSeatId(row, col);
										<input type="checkbox" id="seat-@row-@col" name="SelectedSeats" value="@seatId"/>
									}
									else
									{
										<input type="checkbox" id="seat-@row-@col" name="Seats" value="@seat.Id" disabled checked/>
									}
									@* <label for="seat-@row-@col">Row @row, Column @col</label> *@
								}
								<br />
							}
						</div>
						<input class="btn btn-danger" type="submit" value="Continue"/>
					</div>
					<div class="col">
						<h2 class="text-end">Total price: <span id="total-price">0.00</span> лв.</h2>
					</div>
				</div>
			</form>
		</div>
	</div>
</div>


@section Scripts
{
	<script>
		function calculateTotalPrice() {
			var totalPrice = 0;
			var quantityInputs = document.querySelectorAll('select[name^="SelectedTickets"]')

			quantityInputs.forEach(function (input) {
				var quantity = parseInt(input.value);
				var price = parseFloat(input.getAttribute('data-price'));

				if (!isNaN(quantity) && quantity > 0 && !isNaN(price)) {
					totalPrice += quantity * price;
				}
			});

			document.getElementById('total-price').innerText = totalPrice.toFixed(2);
		}

		function validateForm() {
			var totalTickets = 0;
			var quantityInputs = document.querySelectorAll('select[name^="SelectedTickets"]');

			quantityInputs.forEach(function (input) {
				var quantity = parseInt(input.value);
				if (!isNaN(quantity) && quantity > 0) {
					totalTickets += quantity;
				}
			});

			var totalSeats = 0;
			var seatInputs = document.querySelectorAll('input[name^="SelectedSeats"]:checked:not(:disabled)');

			totalSeats = seatInputs.length;

			if (totalSeats !== totalTickets) {
				alert('The number of seats selected must match the number of tickets.');
				return false;
			}

			return true;
		}

		window.onload = function () {
			var quantityInputs = document.querySelectorAll('select[name^="SelectedTickets"]');
			quantityInputs.forEach(function (input) {
				input.addEventListener('change', function () {
					var seatInputs = document.querySelectorAll('input[name^="SelectedSeats"]:checked:not(:disabled)');
					seatInputs.forEach(function (seatInput) {
						seatInput.checked = false;
					});
				});
			});
		}
	</script>
}
